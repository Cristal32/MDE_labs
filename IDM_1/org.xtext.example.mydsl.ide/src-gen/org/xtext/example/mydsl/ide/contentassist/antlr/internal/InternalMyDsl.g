/*
 * generated by Xtext 2.36.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDB
entryRuleDB
:
{ before(grammarAccess.getDBRule()); }
	 ruleDB
{ after(grammarAccess.getDBRule()); } 
	 EOF 
;

// Rule DB
ruleDB 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDBAccess().getGroup()); }
		(rule__DB__Group__0)
		{ after(grammarAccess.getDBAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumn
entryRuleColumn
:
{ before(grammarAccess.getColumnRule()); }
	 ruleColumn
{ after(grammarAccess.getColumnRule()); } 
	 EOF 
;

// Rule Column
ruleColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnAccess().getGroup()); }
		(rule__Column__Group__0)
		{ after(grammarAccess.getColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DB__Group__0__Impl
	rule__DB__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBAccess().getDBAction_0()); }
	()
	{ after(grammarAccess.getDBAccess().getDBAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DB__Group__1__Impl
	rule__DB__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBAccess().getDBKeyword_1()); }
	'DB'
	{ after(grammarAccess.getDBAccess().getDBKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DB__Group__2__Impl
	rule__DB__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBAccess().getNameAssignment_2()); }
	(rule__DB__NameAssignment_2)
	{ after(grammarAccess.getDBAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DB__Group__3__Impl
	rule__DB__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getDBAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DB__Group__4__Impl
	rule__DB__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBAccess().getGroup_4()); }
	(rule__DB__Group_4__0)?
	{ after(grammarAccess.getDBAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DB__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getDBAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DB__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DB__Group_4__0__Impl
	rule__DB__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBAccess().getTablesKeyword_4_0()); }
	'tables'
	{ after(grammarAccess.getDBAccess().getTablesKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DB__Group_4__1__Impl
	rule__DB__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getDBAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DB__Group_4__2__Impl
	rule__DB__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBAccess().getTablesAssignment_4_2()); }
	(rule__DB__TablesAssignment_4_2)
	{ after(grammarAccess.getDBAccess().getTablesAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DB__Group_4__3__Impl
	rule__DB__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBAccess().getGroup_4_3()); }
	(rule__DB__Group_4_3__0)*
	{ after(grammarAccess.getDBAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DB__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getDBAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DB__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DB__Group_4_3__0__Impl
	rule__DB__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getDBAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DB__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBAccess().getTablesAssignment_4_3_1()); }
	(rule__DB__TablesAssignment_4_3_1)
	{ after(grammarAccess.getDBAccess().getTablesAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getTableAction_0()); }
	()
	{ after(grammarAccess.getTableAccess().getTableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getTableKeyword_1()); }
	'Table'
	{ after(grammarAccess.getTableAccess().getTableKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getNameAssignment_2()); }
	(rule__Table__NameAssignment_2)
	{ after(grammarAccess.getTableAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__4__Impl
	rule__Table__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_4()); }
	(rule__Table__Group_4__0)?
	{ after(grammarAccess.getTableAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_4__0__Impl
	rule__Table__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColumnsKeyword_4_0()); }
	'columns'
	{ after(grammarAccess.getTableAccess().getColumnsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_4__1__Impl
	rule__Table__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_4__2__Impl
	rule__Table__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColumnsAssignment_4_2()); }
	(rule__Table__ColumnsAssignment_4_2)
	{ after(grammarAccess.getTableAccess().getColumnsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_4__3__Impl
	rule__Table__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_4_3()); }
	(rule__Table__Group_4_3__0)*
	{ after(grammarAccess.getTableAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_4_3__0__Impl
	rule__Table__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getTableAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColumnsAssignment_4_3_1()); }
	(rule__Table__ColumnsAssignment_4_3_1)
	{ after(grammarAccess.getTableAccess().getColumnsAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Column__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__0__Impl
	rule__Column__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getColumnAction_0()); }
	()
	{ after(grammarAccess.getColumnAccess().getColumnAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__1__Impl
	rule__Column__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getColumnKeyword_1()); }
	'Column'
	{ after(grammarAccess.getColumnAccess().getColumnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__2__Impl
	rule__Column__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getNameAssignment_2()); }
	(rule__Column__NameAssignment_2)
	{ after(grammarAccess.getColumnAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__3__Impl
	rule__Column__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getColumnAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__4__Impl
	rule__Column__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getGroup_4()); }
	(rule__Column__Group_4__0)?
	{ after(grammarAccess.getColumnAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getColumnAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Column__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group_4__0__Impl
	rule__Column__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getTypeKeyword_4_0()); }
	'type'
	{ after(grammarAccess.getColumnAccess().getTypeKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getTypeAssignment_4_1()); }
	(rule__Column__TypeAssignment_4_1)
	{ after(grammarAccess.getColumnAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DB__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getDBAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__TablesAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBAccess().getTablesTableParserRuleCall_4_2_0()); }
		ruleTable
		{ after(grammarAccess.getDBAccess().getTablesTableParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DB__TablesAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBAccess().getTablesTableParserRuleCall_4_3_1_0()); }
		ruleTable
		{ after(grammarAccess.getDBAccess().getTablesTableParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getTableAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ColumnsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_4_2_0()); }
		ruleColumn
		{ after(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ColumnsAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_4_3_1_0()); }
		ruleColumn
		{ after(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getColumnAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getTypeEStringParserRuleCall_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getColumnAccess().getTypeEStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
